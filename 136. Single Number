Approach 1: Hash Map 
more runtime

class Solution {
    public int singleNumber(int[] nums) {
        HashMap<Integer,Integer> frequency = new HashMap();
        
        for(int i=0;i<nums.length;i++)
        {
           if(!frequency.containsKey(nums[i]))
               frequency.put(nums[i],1);
            else
                frequency.put(nums[i],frequency.get(nums[i])+1);
        }
    
    for(Map.Entry<Integer,Integer> entry : frequency.entrySet())
    {
        int key = entry.getKey();
        int val = entry.getValue();
        if(val == 1)
            return key;
    }
        return -1;
  }
}

Approach 2: Bit Manipulation (XOR)\
class Solution {
    public int singleNumber(int[] nums) {
        int result=0;
        for(int i=0;i<nums.length;i++)
        {
            result ^= nums[i];
        }
        return result;
    }
}
